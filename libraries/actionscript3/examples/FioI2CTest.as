package {	import flash.display.Shape;	import flash.display.Sprite;	import flash.events.Event;		import funnel.*;	import funnel.i2c.*;	/**	 * HMC6352コンパスモジュールの方向情報を表示する。	 * Display heading values of a HMC6352 compass module.	 *	 * <p>準備<ol>	 * <li>FIOにHMC6352コンパスモジュールを接続する</li>	 * <li>hardware/arduino/SimpleI2CFirmataをFIOにアップロードする</li>	 * </ol></p>	 *	 * <p>Preparation<ol>	 * <li>Connect a HMC6352 compass module to the FIO</li>	 * <li>upload hardware/arduino/SimpleI2CFirmata to the FIO</li>	 * </ol></p>	 */	public class FioI2CTest extends Sprite {		private const defaultText:String = "Press the mouse button to start calibration.";		private var fio:Fio;		private var compass:HMC6352;		private var clockHand:Shape;		public function FioI2CTest() {			var config:Configuration = Fio.FIRMATA;			config.enablePowerPins();			fio = new Fio([1], config);			fio.addEventListener(FunnelEvent.READY, trace);			fio.addEventListener(FunnelErrorEvent.REBOOT_ERROR, trace);			fio.addEventListener(FunnelErrorEvent.CONFIGURATION_ERROR, trace);			fio.addEventListener(FunnelErrorEvent.ERROR, trace);			compass = new HMC6352(fio.ioModule(1));			initClockHand();			addEventListener(Event.ENTER_FRAME, loop);		}		private function loop(event:Event):void {			clockHand.rotation = compass.heading;		}		private function initClockHand():void {			clockHand = new Shape();			clockHand.x = 200;			clockHand.y = 200;			clockHand.graphics.clear();			clockHand.graphics.beginFill(0x000000);			clockHand.graphics.moveTo(0, -100);			clockHand.graphics.lineTo(20, 20);			clockHand.graphics.lineTo(0, 0);			clockHand.graphics.lineTo(-20, 20);			clockHand.graphics.lineTo(0, -100);			clockHand.graphics.endFill();			clockHand.graphics.lineStyle(1, 0x000000);			clockHand.graphics.drawCircle(0, 0, 102);			clockHand.rotation = 0;			this.addChild(clockHand);		}	}}