package {	import flash.display.Shape;	import flash.display.Sprite;	import flash.events.Event;		import funnel.*;	import funnel.i2c.*;	/**	 * HMC6343コンパスモジュールの方向情報を表示する。	 * Display heading values of a HMC6343 compass module.	 *	 * <p>準備<ol>	 * <li>HMC6343コンパスモジュールを接続する</li>	 *   <ol>	 * 	 <li>A2: the ground pin</li>	 *   <li>A3: the power pin</li>	 *   <li>A4: the I2C data pin</li>	 *   <li>A5: the I2C clock pin</li>	 *   </ol>	 * <li>hardware/arduino/SimpleI2CFirmataをArduinoにアップロードする</li>	 * </ol></p>	 *	 * <p>Preparation<ol>	 * <li>Connect a HMC6343 compass module to the Arduino</li>	 *   <ol>	 * 	 <li>A2: the ground pin</li>	 *   <li>A3: the power pin</li>	 *   <li>A4: the I2C data pin</li>	 *   <li>A5: the I2C clock pin</li>	 *   </ol>	 * <li>upload hardware/arduino/SimpleI2CFirmata to the Arduino</li>	 * </ol></p>	 */	public class ArduinoI2C_HMC6343 extends Sprite {		private var aio:Arduino;		private var compass:HMC6343_Simple;		private var clockHand:Shape;		public function ArduinoI2C_HMC6343() {			var config:Configuration = Arduino.FIRMATA;			config.enablePowerPins();			aio = new Arduino(config);			aio.addEventListener(FunnelEvent.I2C_POWER_PINS_READY, onI2CPowerPinsReady);			initClockHand();		}		private function onI2CPowerPinsReady(event:Event):void {			compass = new HMC6343_Simple(aio);			compass.addEventListener(Event.CHANGE, onCompassHeadingChange);		}		private function onCompassHeadingChange(e:Event):void {			clockHand.rotation = compass.heading;		}		private function initClockHand():void {			clockHand = new Shape();			clockHand.x = 200;			clockHand.y = 200;			clockHand.graphics.clear();			clockHand.graphics.beginFill(0x000000);			clockHand.graphics.moveTo(0, -100);			clockHand.graphics.lineTo(20, 20);			clockHand.graphics.lineTo(0, 0);			clockHand.graphics.lineTo(-20, 20);			clockHand.graphics.lineTo(0, -100);			clockHand.graphics.endFill();			clockHand.graphics.lineStyle(1, 0x000000);			clockHand.graphics.drawCircle(0, 0, 102);			clockHand.rotation = 0;			this.addChild(clockHand);		}	}}