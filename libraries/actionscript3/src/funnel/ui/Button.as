package funnel.ui {	import flash.events.Event;	import flash.utils.Timer;	import flash.events.TimerEvent;	import funnel.*;	/**	 * Created 16 May 2009	 * By Shigeru Kobayashi	 * This is the class to express a generic button	 */	public class Button extends PhysicalInput {		public static  const PULL_DOWN:uint = 0;		public static  const PULL_UP:uint = 1;		private var _pin:Pin;		private var _timer:Timer = null;		public function Button(buttonPin:Pin, buttonMode:uint = PULL_DOWN, longPressDelay:Number = 2000) {			super();			_pin = buttonPin;			_pin.filters = [new SetPoint([0.5, 0.1])];			if (buttonMode == PULL_DOWN) {				_pin.addEventListener(PinEvent.RISING_EDGE, buttonPressed);				_pin.addEventListener(PinEvent.FALLING_EDGE, buttonReleased);			} else if (buttonMode == PULL_UP) {				_pin.addEventListener(PinEvent.FALLING_EDGE, buttonPressed);				_pin.addEventListener(PinEvent.RISING_EDGE, buttonReleased);			} else {				throw(new ArgumentError("buttonMode should be PULL_DOWN or PULL_UP"));			}			_timer = new Timer(longPressDelay, 1);			_timer.addEventListener(TimerEvent.TIMER, buttonPressedForLongTime);		}		private function buttonPressed(e:PinEvent):void {			dispatchEvent(new ButtonEvent(ButtonEvent.PRESS));			if (!_timer.running) {				_timer.start();			} else {				_timer.reset();			}		}		private function buttonReleased(e:PinEvent):void {			if (_timer.running) {				_timer.stop();			}			dispatchEvent(new ButtonEvent(ButtonEvent.RELEASE));		}		private function buttonPressedForLongTime(e:TimerEvent):void {			dispatchEvent(new ButtonEvent(ButtonEvent.LONG_PRESS));		}	}}