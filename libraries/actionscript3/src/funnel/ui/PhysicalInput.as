package funnel.ui {	import flash.events.IEventDispatcher;	import flash.events.EventDispatcher;	import flash.events.Event;	/**	 * This is the base class for physical inputs	 * 	 * @author Shigeru Kobayashi	 */	public class PhysicalInput implements IEventDispatcher {		private var _dispatcher:EventDispatcher;		/**		 * 		 */		public function PhysicalInput() {			_dispatcher = new EventDispatcher(this);		}		/**		 * 		 * @param type		 * @param listener		 * @param useCapture		 * @param priority		 * @param useWeakReference		 */		public function addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false):void {			_dispatcher.addEventListener(type, listener, useCapture, priority);		}		/**		 * 		 * @param evt		 * @return 		 */		public function dispatchEvent(evt:Event):Boolean {			return _dispatcher.dispatchEvent(evt);		}		/**		 * 		 * @param type		 * @return 		 */		public function hasEventListener(type:String):Boolean {			return _dispatcher.hasEventListener(type);		}		/**		 * 		 * @param type		 * @param listener		 * @param useCapture		 */		public function removeEventListener(type:String, listener:Function, useCapture:Boolean = false):void {			_dispatcher.removeEventListener(type, listener, useCapture);		}		/**		 * 		 * @param type		 * @return 		 */		public function willTrigger(type:String):Boolean {			return _dispatcher.willTrigger(type);		}	}}