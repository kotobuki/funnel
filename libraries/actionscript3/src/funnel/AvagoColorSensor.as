package funnel {	import funnel.I2CDevice;	/**	 * This is the class to express Avago ADJD-S371-QR999 color sensor modules	 */	public class AvagoColorSensor extends I2CDevice {		public var red:Number = 0;		public var green:Number = 0;		public var blue:Number = 0;		public var clear:Number = 0;		public function AvagoColorSensor(ioModule:*, address:uint = 0x74) {			super(ioModule, address);			// CAPs are 4bit			_io.sendSysex(I2C_REQUEST, [WRITE, address, 0x06, 0x03, 0x03, 0x03, 0x03]);			// INTs are 12bit			_io.sendSysex(I2C_REQUEST, [WRITE, address, 0x0A, 0xC4, 0x09, 0xC4, 0x09, 0xC4, 0x09, 0xC4, 0x09]);		}		public override function update():void {			// start reading			_io.sendSysex(I2C_REQUEST, [WRITE, address, 0x00, 0x01]);			// read data: red, green, blue and clear			_io.sendSysex(I2C_REQUEST, [READ, address, 0x40, 0x08]);		}		public override function handleSysex(command:uint, data:Array):void {			if (command != I2C_REPLY) {				return;			}			// data should be: slave address, register, {MSB, LSB} * 4			if (data.length != 10) {				return;			}			red = (int(data[2]) + int(data[3]) * 256) / 4;			green = (int(data[4]) + int(data[5]) * 256) / 4;			blue = (int(data[6]) + int(data[7]) * 256) / 4;			clear = (int(data[8]) + int(data[9]) * 256) / 4;		}	}}